#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <29 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q         &kp W        &kp E        &kp R          &kp T      &kp Y  &kp U               &kp I            &kp O            &kp P
  &bhm LCTRL A  &bhm LALT S  &bhm LGUI D  &bhm LSHIFT F  &kp G      &kp H  &bhm RIGHT_SHIFT J  &bhm LEFT_GUI K  &bhm LEFT_ALT L  &bhm LCTRL SLASH
  &kp Z         &kp X        &kp C        &kp V          &lt 3 B    &kp N  &kp M               &kp COMMA        &kp DOT          &kp BACKSPACE
                             &kp LCTRL    &kp SPACE      &mo 1      &mo 2  &kp RET
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
  &trans    &kp UP    &trans     &trans     &trans      &kp N7     &kp N8   &kp N9  &kp N0   &kp HOME
  &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans      &kp N4     &kp N5   &kp N6  &none    &trans
  &trans    &trans    &trans     &kp MINUS  &kp PLUS    &kp N1     &kp N2   &kp N3  &kp DOT  &trans
                      &kp LGUI   &kp SPACE  &trans      &kp RCTRL  &kp RET
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
  &kp LS(TAB)   &kp TAB      &kp HASH    &kp DLLR  &kp PRCNT    &kp LA(LEFT)  &kp LA(DOWN)  &kp LA(UP)        &kp LA(RIGHT)  &kp PRINTSCREEN
  &bt BT_CLR    &bt BT_PRV   &bt BT_NXT  &trans    &to 3        &kp LEFT      &kp DOWN      &kp UP            &kp RIGHT      &none
  &out OUT_TOG  &bootloader  &trans      &trans    &trans       &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP_ARROW)  &kp LC(RIGHT)  &kp DELETE
                             &trans      &trans    &trans       &trans        &trans
            >;
        };

        Game {
            label = "Game";
            bindings = <
  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &sl 4           &trans    &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans
                  &trans  &trans  &kp LEFT_ALT    &kp RGUI  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))
  &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans
  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans
                              &kp J         &kp I         &kp M           &trans         &trans
            >;
        };

        Mouse {
            bindings = <
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &mkp MCLK  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &mkp LCLK
                     &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };
    };
};
