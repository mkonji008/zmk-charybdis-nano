#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <8 9>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <29 28>;
        };

        bt+boot {
            bindings = <&mo 4>;
            key-positions = <5 6 7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &kp Q         &kp W        &kp E        &kp R          &kp T          &kp Y            &kp U               &kp I            &kp O            &kp P
  &bhm LCTRL A  &bhm LALT S  &bhm LGUI D  &bhm LSHIFT F  &kp G          &kp H            &bhm RIGHT_SHIFT J  &bhm LEFT_GUI K  &bhm LEFT_ALT L  &bhm LCTRL SLASH
  &kp Z         &kp X        &kp C        &kp V          &lt 1 B        &lt 7 N          &lt 6 M             &kp COMMA        &kp DOT          &mkp MCLK
                             &mkp RCLK    &mkp LCLK      &lt 1 SPACE    &lt 2 BACKSPACE  &lt 3 RET
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &kp N7  &kp N8  &kp N9  &kp N0  &trans
  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp N4  &kp N5  &kp N6  &none   &trans
  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp N1  &kp N2  &kp N3  &trans  &trans
                   &trans   &trans   &trans    &trans  &trans
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
  &kp DOLLAR  &kp PERCENT    &kp CARET         &kp LBRC  &kp RBRC    &kp EQUAL  &kp PLUS      &kp GRAVE  &kp SINGLE_QUOTE   &kp SEMICOLON
  &kp AMPS    &kp EXCL       &kp QMARK         &kp LBKT  &kp RBKT    &kp UNDER  &kp MINUS     &trans     &kp DOUBLE_QUOTES  &kp COLON
  &kp AT      &kp LESS_THAN  &kp GREATER_THAN  &kp LPAR  &kp RPAR    &kp HASH   &kp ASTERISK  &kp TILDE  &kp PIPE           &kp BACKSLASH
                             &trans            &trans    &trans      &trans     &trans
            >;
        };

        nav-and-fn {
            label = "nav-and-fn";
            bindings = <
  &kp LS(TAB)  &kp TAB  &kp INSERT  &kp HOME  &kp PAGE_UP      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
  &trans       &trans   &trans      &kp END   &kp PAGE_DOWN    &kp UNDER  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH
  &trans       &trans   &trans      &trans    &trans           &kp MINUS  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE
                        &trans      &trans    &kp SPACE        &trans     &trans
            >;
        };

        bt+boot {
            label = "bt+boot";
            bindings = <
  &bt BT_NXT    &bt BT_PRV  &none   &none   &bootloader    &bootloader  &none   &none  &none  &none
  &bt BT_CLR    &none       &none   &none   &none          &none        &none   &none  &none  &none
  &out OUT_TOG  &none       &none   &none   &none          &none        &none   &none  &none  &none
                            &trans  &trans  &trans         &trans       &trans
            >;
        };

        Mouse {
            bindings = <
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &trans     &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans
  &mkp MCLK  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &mkp LCLK
                     &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };

        macro-1 {
            bindings = <
  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N0)  &none    &none  &none  &none  &none  &none
  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &none       &none    &none  &none  &none  &none  &none
  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &none       &none    &none  &none  &none  &none  &none
                          &none       &none       &none    &none  &none
            >;
        };

        macro-2 {
            bindings = <
  &kp LG(LS(N1))  &kp LG(LS(N2))  &kp LS(LG(N3))  &kp LG(LS(N0))  &none    &none  &none  &none  &none  &none
  &kp LG(LS(N4))  &kp LG(LS(N5))  &kp LG(LS(N6))  &none           &none    &none  &none  &none  &none  &none
  &kp LG(LS(N7))  &kp LG(LS(N8))  &kp LG(LS(N9))  &none           &none    &none  &none  &none  &none  &none
                                  &none           &none           &none    &none  &none
            >;
        };

        game {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        game+ {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
